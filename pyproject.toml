[tool.poetry]
name = "github-pipeline"
version = "0.1.0"
description = "Dagster-based ETL tasks for GitHub reporting"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
    { include = "github_pipeline" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
dagster = ">=1.8.4"
dagster-aws = ">=0.24.4"
pandas = ">=2.2.2"
s3fs = { extras = ["boto3"], version = "^2025.2.0" }

[tool.poetry.group.dev.dependencies]
boto3-stubs = {extras = ["s3"], version = ">=1.35.14"}
dagster-webserver = ">=1.8.4"
ipykernel = ">=6.29.4"
pandas-stubs = ">=2.2.3.250308"
pytest-cov = ">=5.0.0"
ruff = ">=0.5.1"
types-requests = ">=2.32.0.20250328"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.dagster]
module_name = "github_pipeline.definitions"
code_location_name = "GitHub Reporting"

[tool.ruff]
line-length = 120
# Always generate Python 3.10-compatible code.
target-version = "py310"

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
# sort imports
extend-select = ["I"]
# Enable all `pydocstyle` rules, limiting to those that adhere to the
# Google convention via `convention = "google"`, below.
select = ["D"]
ignore = [
    "D100", # ignore module docstrings
]

[tool.ruff.lint.pydocstyle]
convention = "google"
